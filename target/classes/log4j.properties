#设置Logger的输出级别和输出的目的地#
#debug是指级别#
#stout是指输出到控制台   即一个存放器的名称#
#logfile文件保存在哪里   一个存放器的名称#
#根记录器 ： rootLogger
#配置语法 ：log4j.rootLogger = [日志级别],存放器名1,存放器名2, ... ,存放器名N
#日志级别 ：级别由高到低依次是：fatal、error、warn、info、debug。
#如果你的日志级别高，那么比他级别的日志记录将不会显示
log4j.rootLogger=debug,stout,logfile

# 将日志输出到控制台#
#appender是指追加#
log4j.appender.stout=org.apache.log4j.ConsoleAppender
#采用的输出语句#
log4j.appender.stout.Target=System.err
#配置输出到控制台的字符编码
log4j.appender.stout.Encoding =GBK
#采用的布局（样式）#
#SimpleLayout是指简单布局#
log4j.appender.stout.layout=org.apache.log4j.SimpleLayout
#SimpleLayout是最简单的Layout，它只是打印消息级别和渲染后的消息，并且不处理异常信息。

#将日志输出到文件#
log4j.appender.logfile= org.apache.log4j.FileAppender
#配置输出到文件的字符编码
log4j.appender.logfile.Encoding =GBK
#配置输出到文件的名称
log4j.appender.logfile.File=test.log
#PatternLayout是指样板布局   也可以说是模型设计布局    最复杂  最常用的布局   #
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#设置输出格式#
#%d{yyyy-MM-dd HH:mm:ss}%l %F %p %m%n是指获取日期格式，以自定义的格式输出日志信息。#
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}%l %F %p %m %n

